// Generated by CoffeeScript 1.6.2
var S, TimerAdapter, libxmljs, onRadioAdapter, request, _,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

TimerAdapter = require("hubiquitus").TimerAdapter;

request = require("request");

libxmljs = require("libxmljs");

_ = require("underscore");

S = require('string');

onRadioAdapter = (function(_super) {
  __extends(onRadioAdapter, _super);

  function onRadioAdapter(properties) {
    this.startJob = __bind(this.startJob, this);    onRadioAdapter.__super__.constructor.apply(this, arguments);
    this.url = "";
    this.radio = "";
  }

  onRadioAdapter.prototype.startJob = function() {
    var _this = this;

    return request({
      url: this.url
    }, function(error, response, body) {
      var broadcast;

      if ((error != null) || (response.statusCode !== 200)) {
        return;
      }
      broadcast = _this.findInformation(body);
      if (_.isEqual(broadcast, _this.previousBroadcast)) {
        return;
      }
      _this.previousBroadcast = broadcast;
      return _this.owner.emit("message", _this.owner.buildMessage(_this.owner.actor, "onRadioBroadcast", _this.clean(broadcast)));
    });
  };

  onRadioAdapter.prototype.findInformation = function(page) {
    return {};
  };

  onRadioAdapter.prototype.clean = function(dirty) {
    var cleaner;

    cleaner = {};
    cleaner.radio = dirty.radio;
    cleaner.timestamp = new Date().getTime();
    cleaner.track = {};
    cleaner.track.artist = S(dirty.track.artist || "").trim().s;
    cleaner.track.title = S(dirty.track.title || "").trim().s;
    cleaner.track.collection = S(dirty.track.collection || "").trim().s;
    return cleaner;
  };

  return onRadioAdapter;

})(TimerAdapter);

module.exports = onRadioAdapter;
